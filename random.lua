-- This file was generated using Luraph Obfuscator v13.5.4

return(function(LR,ER,QR,PR,qR,vR,eR,ZR,zR,YR,VR,oR,GR,sR,gR,mR,RR,xR,FR,lR,NR,aR,WR,bR,hR,jR,CR,HR,TR,kR,yR,wR,MR,fR,iR,OR,UR,BR,AR,cR,DR,...)local d,p,c,S=nil,nil,nil,(nil);local t,u=MR,FR;local nR=(0);do repeat do if not(nR<=1)then do if nR==2 then c={[0x00000]=0x1};nR=1;else p=string.sub;nR=2;end;end;elseif nR==0x000 then d=WR;do nR=0x3;end;else S=yR;break;end;end;until(false);end;local K,D,F,a=nil,nil,nil,nil;local h=setfenv;do for WB=0,3 do if not(WB<=0X1)then do if WB~=0x002 then a=kR;else F=string.gsub;end;end;else if WB==0 then K=aR;else D=(RR or bit32);end;end;end;end;local y,M=nil,nil;for ub=0X0,0X0001 do if ub~=0X0 then do M=zR.rep;end;else y=ZR;end;end;local k=(rawset);local B,L,j,v,W=unpack or BR,nil,nil,nil,(nil);local z,I=sR,(zR.char);for qB=0X0000,4 do if not(qB<=0X1)then if qB<=2 then else if qB~=0X3 then W=AR;else v=1;end;end;else do if qB~=0 then j={[0]={[0X000]=0X0,0X1,hR,3,4,5,0x6,0X7,8,9,0X0000a,0XB,0xc,13,0xE,15},{[0X0]=OR,0,3,2,0X5,4,0x00007,0x6,0X9,8,0XB,10,0Xd,0x000C,0X00f,14},{[0]=2,0x00003,0X00000,1,6,0X7,4,0X5,0xA,0X0B,YR,9,0Xe,15,12,0xD},{[0X0]=vR,0X2,0x1,0X0,7,0x6,5,PR,0x0000b,10,9,0X008,0Xf,14,0X00D,0X000c},{[0]=0X04,0x5,6,0X7,0,0X1,0X0002,0X3,0xc,13,0X00e,15,8,9,10,11},{[bR]=0x00005,PR,7,0x6,0x1,0,3,0X2,0X0D,12,0X000f,14,eR,YR,0XB,10},{[0]=6,7,4,5,0X2,0X003,0,1,0x000e,0X0f,12,0X000d,10,gR,8,0X9},{[0X0]=7,6,0x5,0X04,vR,2,1,0,0XF,14,13,0Xc,0Xb,0X0000A,9,0X8},{[0]=0X8,9,10,gR,12,0x000D,14,NR,0,1,0X2,3,0x4,0X5,6,0x00007},{[bR]=9,8,0X00B,10,13,0xc,0XF,GR,1,bR,3,hR,0X5,4,7,0X6},{[0]=10,11,8,0X9,0xE,15,0xC,13,0x2,0X0003,0,0X1,0X00006,7,0X004,0x05},{[0X0]=11,qR,9,8,15,14,0Xd,0xC,3,2,0X1,0,7,6,5,0X4},{[0X0]=0X00c,0XD,14,0x0f,0X8,0x9,10,0Xb,0x4,5,6,0X07,0,0x0001,0X2,vR},{[0X0]=0XD,12,15,14,0X09,0X0008,0x00B,qR,5,4,lR,6,1,0X0,0X0003,0X2},{[0X00]=0X0e,0xF,12,13,0xA,gR,8,9,6,0x007,4,5,0X00002,0X3,0,1},{[0]=0XF,0x0E,13,0xC,0Xb,10,0X9,8,lR,6,5,0X004,3,0X0002,0X01,bR}};else L={0X7,1,0x6};end;end;end;end;local O,Y=nil,(nil);for Bf=0x0,1 do do if Bf~=0X0 then do Y=(O and O()or ER);end;else O=cR;end;end;end;do nR=0X1;end;local G,P=nil,nil;repeat if not(nR<=0x00)then if nR==0X00001 then do G=0X0000100000000;end;nR=0X00;elsenR=0X3;end;else nR=0X2;end;until nR>2;local X,b=assert,(nil);P=F(p(P,0X5),'\046.',function(fo)if K(fo,2)==0x48 then local lp=(0);do while'^Dc\120i'do do if lp~=0X0 then return"";else b=S(p(fo,0x01,0X1));lp=1;end;end;end;end;else local PJ=nil;for w0=0,0X01 do if w0~=0x0 then if not(b)then return PJ;else local Be=0X1;local ge=(nil);repeat if Be<=0 then return ge;else if Be==1 then ge=M(PJ,b);do Be=2;end;else b=nil;Be=0;end;end;until false;end;else do PJ=I(S(fo,0x0010));end;end;end;end;end);nR=2;local e,N,q=nil,nil,nil;repeat if nR<=0 then N=0X00080000000;nR=0X00001;else if nR==1 then q=hR^0X34;break;else e=function()local D_,M_=2,nil;repeat if not(D_<=0X0)then if D_~=1 then M_=K(P,v,v);D_=0X1;else v=v+0X1;D_=0;end;else return M_;end;until(false);end;do nR=0X0;end;end;end;until false;local l=(G-OR);local r,g,E=CR,nil,nil;for z5=0,2 do do if not(z5<=0X0)then if z5~=1 then E=function(e7,x7,M7)local w7=(nil);local B7=(0);while 0X02a4F62 do if not(B7<=0)then if B7==0X1 then return w7;else w7=w7-w7%1;B7=0X00001;end;else w7=(e7/c[x7])%c[M7];B7=2;end;end;end;else do local bv=(nil);local Xv=(0X0);while Xv~=2 do if Xv~=0 then do for od=0X1,xR do local Md=0x1;repeat do if Md==0 then bv=bv*0X02;Md=0X2;else c[od]=bv;Md=0x000;end;end;until Md>=0X2;end;end;Xv=0X2;else bv=hR;Xv=1;end;end;end;end;else g=function()local Wd,Ed,jd,Dd=K(P,v,v+0X0003);v=v+4;return Dd*0X1000000+jd*0X10000+Ed*0X100+Wd;end;end;end;end;local A=(N-1);do nR=0X0;end;local C,J=nil,nil;while nR<0X2 do if nR~=0X0 then J=jR;nR=0X2;else C=function()local BQ,QQ=g(),(g());do if not(QQ>=N)then else QQ=QQ-G;end;end;do return QQ*G+BQ;end;end;nR=0x1;end;end;local x=(function()local TH=g();local hH=(g());if not(TH==0 and hH==0)then else return 0;end;local RH,YH,QH,qH,WH=1,nil,nil,nil,(nil);do repeat do if RH<=0X00001 then if RH==0x0 then WH=E(hH,0,20)*G+TH;break;else YH=1;RH=3;end;else do if RH~=0x002 then QH=(-0X1)^E(hH,0X1f,0X1);do RH=2;end;else qH=E(hH,0X14,11);do RH=0x00;end;end;end;end;end;until false;end;RH=1;while-0X00004dFDEE9 do if RH==0X0 then return QH*(0X02^(qH-1023))*(WH/q+YH);else if qH==0 then if WH==0 then do return QH*0X00000;end;else local dY=0X00000;while dY<0X02 do if dY==0x00000 then qH=1;dY=1;else YH=bR;dY=0X00002;end;end;end;else if qH==2047 then if WH~=0X0 then return QH*(1/0x00);else return QH*(0X0/0x0000);end;end;end;do RH=0;end;end;end;end);local i=(D and D.bxor or function(QY,xY)QY=QY%G;local GY=(nil);local FY=1;local KY=1;while KY~=0x3 do if not(KY<=0)then if KY==1 then xY=xY%G;KY=2;else do GY=0;end;KY=0;end;else while QY>0X0 and xY>0X00000 do local Eg,Gg=QY%16,0x0;local Xg=(nil);repeat if Gg==0X00000 then Xg=xY%0X010;Gg=1;else GY=GY+j[Eg][Xg]*FY;Gg=0X0002;end;until Gg>1;Gg=0X1;repeat if not(Gg<=0)then if Gg==0X01 then QY=(QY-Eg)/0X10;Gg=0x0;else FY=FY*0x0010;break;end;else xY=(xY-Xg)/0X10;Gg=0x2;end;until false;end;KY=3;end;end;return GY+QY*FY+xY*FY;end);local w=(D and D[DR]or function(F3,S3)do for pG=0X00000,0X2 do if not(pG<=0x0)then if pG==1 then S3=S3%G;else do return((F3+S3)-i(F3,S3))/0X02;end;end;else F3=F3%G;end;end;end;end);local m=D and D.bor or function(Cv,jv)local xv=(0X2);repeat do if xv<=0 then jv=jv%G;xv=1;else do if xv==1 then return l-w(l-Cv,l-jv);else do Cv=Cv%G;end;do xv=0X0;end;end;end;end;end;until(false);end;local U,Q,o=D and D[iR]or function(ya)return l-(ya%G);end,D and D.lshift,D and D.rshift;nR=5;local s,JR,f,V=nil,nil,nil,nil;while nR~=0X06 do if nR<=2 then if not(nR<=0x0)then do if nR~=0X1 then f={[0X4]=3,[4]=0X004,[0X5]=1,[1]=0X5,[9]=0X7,[0]=0X7,[7]=0X0003,[0x00006]=0X2,[9]=7,[5]=0X6,[0X3]=0X4,[0]=lR};do nR=3;end;else JR={};do nR=2;end;end;end;else do Q=Q or function(ie,We)local ue=2;while(true)do if not(ue<=0X0)then if ue==1 then if We<bR then do return o(ie,-We);end;end;do ue=0x00;end;else do if not(We>=32)then else return bR;end;end;ue=0X00001;end;else return(ie*c[We])%G;end;end;end;end;nR=4;end;else if nR<=3 then V=function()local D_=0;local x_=0;while true do local qz=K(P,v,v);v=v+0X1;x_=m(x_,Q(w(qz,127),D_));if w(qz,0X80)~=0X0 then else do return x_;end;end;D_=D_+7;end;end;nR=6;else if nR==4 then o=o or function(S2,P2)local N2=nil;for YU=0,2 do if YU<=0 then if P2>=mR then do return 0;end;end;else if YU==1 then do if not(P2<0x0)then else return Q(S2,-P2);end;end;else N2=(S2%G/c[P2]);end;end;end;return N2-N2%1;end;nR=0X001;else s=wR;nR=0X0;end;end;end;end;local T=e();nR=0x0000;local rR,H=nil,(nil);do while true do if nR~=0 then H=function()local up=(1);local kp=(nil);while true do if not(up<=0X0)then if up~=1 then return kp;else kp=V();up=0;end;else if kp>A then return kp-G;end;up=0X00002;end;end;end;break;else do rR={};end;nR=1;end;end;end;local XR=(e());nR=0X00001;local tR,uR=nil,nil;do repeat if nR==0x0 then uR=function(...)do return t('#',...),{...};end;end;nR=2;else tR=function(v7)local d7=(0);local j7,I7=nil,nil;while 0.48319257763909496 do if d7==0 then j7={K(P,v,v+0x003)};do d7=0X1;end;else I7=i(j7[1],XR);break;end;end;local U7=i(j7[2],XR);local o7=i(j7[3],XR);local r7=(i(j7[PR],XR));for mh=0,2 do if mh<=0X0 then do XR=(57*XR+v7)%0X0000100;end;else do if mh~=1 then return r7*0X001000000+o7*65536+U7*0X00100+I7;else do v=v+0X4;end;end;end;end;end;end;nR=0;end;until nR>=2;end;local R=(rawget);local SR=(nil);local Z,dR=UR,0X1;do for Rs=0x0,0X001 do if Rs~=0X0 then else do SR=function(dr)local vr,sr,tr=0,nil,(nil);do while 0.7954109947915413 do do if vr<=0X1 then do if vr==0 then do sr=g();end;vr=0X003;else for UB=1,sr,7997 do local cB=(nil);local VB=0;while VB~=2 do do if VB==0X00000 then do cB=UB+0X001F3D-0X00001;end;VB=0X1;else if not(cB>sr)then else cB=sr;end;VB=2;end;end;end;local dB={K(P,v+UB-0X1,v+cB-0X1)};VB=1;repeat do if VB==0X0 then do tr=tr..I(B(dB));end;do VB=0X2;end;else for bu=1,#dB do local Eu=(0);repeat if Eu~=0 then T=(dr*T+QR)%oR;do Eu=0X2;end;else dB[bu]=i(dB[bu],T);Eu=0x1;end;until Eu>=0x2;end;do VB=0;end;end;end;until VB>0X1;end;vr=0x00004;end;end;else do if vr<=2 then do return tr;end;else do if vr~=0X00003 then do v=v+sr;end;vr=2;else tr="";vr=1;end;end;end;end;end;end;end;end;end;end;end;end;end;do nR=3;end;local pR,KR,IR=nil,nil,nil;do while nR~=4 do if not(nR<=1)then if nR~=2 then function pR(qa,Ca,Ra)local Ya=Ca[1];local ka,Xa,Ia,da=Ca[0X4],Ca[2],Ca[0X3],Ca[0X5];local ha=(Ca[8]);local Ga=Ca[9];local Ba=(a({},{__mode='v'}));local Ea=Ca[0X7];local La=(nil);La=function(...)local OK=1;local WK=((O and O()or _ENV));local VK=({});local fK,XK=uR(...);do fK=fK-0X1;end;local KK=0x00;for My=0X0,fK do do if Ya>My then VK[My]=XK[My+1];else break;end;end;end;local jK=((WK==Y and qa or WK));(rR)[0x1]=Ca;do rR[2]=VK;end;do if not Ia then XK=nil;else if da then VK[Ya]={n=fK>=Ya and fK-Ya+1 or 0,B(XK,Ya+0x001,fK+1)};end;end;end;do if jK==WK then else do if not(h)then _ENV=jK;else h(La,jK);end;end;end;end;local LK,UK,IK,hK=u(function()repeat local OU=Ga[OK];local ZU=OU[4];OK=OK+1;if ZU>=45 then if not(ZU>=67)then do if ZU<56 then if not(ZU<0x32)then if not(ZU>=53)then if ZU>=0X33 then if ZU==52 then do(rR)[OU[0X00006]]=VK[OU[0X07]];end;else if VK[OU[6]]~=OU[5]then OK=OU[7];end;end;else VK[OU[0X7]][VK[OU[6]]]=OU[5];end;elseif ZU>=54 then if ZU==0X37 then(VK[OU[0X00007]])[OU[2]]=OU[5];else(VK)[OU[7]]=VK[OU[6]]%OU[0x5];end;else local HF=OU[7];(VK[HF])(VK[HF+0X0001],VK[HF+0X00002]);do KK=HF-0X1;end;end;else if not(ZU<0X2F)then if not(ZU>=0X0030)then local Ze=(OU[0X7]);local Ce=(VK[Ze+0x001]);local fe=(VK[Ze]);local Ye=(VK[Ze+2]);VK[Ze]=z(function()for H0=fe,Ce,Ye do s(true,H0);end;end);do OK=OU[0X006];end;else do if ZU~=0X31 then local Vc=OU[0x007];for ne=Vc,Vc+(OU[0X00006]-0x1)do do(VK)[ne]=XK[Ya+(ne-Vc)+1];end;end;else VK[OU[0X07]][VK[OU[0X00006]]]=VK[OU[0x001]];end;end;end;elseif ZU==0X00002E then VK[OU[0X007]]=VK[OU[0X0006]]/VK[OU[1]];else if OU[0X1]~=0xDb then do VK[OU[7]]=-VK[OU[0x006]];end;else OK=OK-1;(Ga)[OK]={[6]=(OU[6]-125),[7]=(OU[0X7]-125),[4]=0X19};end;end;end;else do if ZU<61 then if ZU>=58 then do if not(ZU<59)then do if ZU==60 then(VK)[OU[7]]=VK[OU[0X6]]+VK[OU[0X1]];else VK[OU[7]]=VK[OU[6]]-VK[OU[0X1]];end;end;else repeat local Rz,Bz,ez=Ba,VK,(OU[7]);do if#Rz>0 then local NT=({});for nF,yF in Z,Rz do for uj,Ej in Z,yF do do if not(Ej[0X1]==Bz and Ej[0x2]>=ez)then else local sa=Ej[2];if not(not NT[sa])then else NT[sa]={Bz[sa]};end;Ej[0X01]=NT[sa];do(Ej)[2]=0x01;end;end;end;end;end;end;end;until true;end;end;elseif ZU~=0X39 then local kF,hF=OU[7],OU[0X6];if hF==0 then else KK=kF+hF-0X1;end;local vF,TF,sF=OU[1],nil,(nil);do if hF~=0x00001 then do TF,sF=uR(VK[kF](B(VK,kF+0X1,KK)));end;else do TF,sF=uR(VK[kF]());end;end;end;do if vF~=0X1 then if vF~=0X0000 then TF=kF+vF-2;KK=TF+1;else TF=TF+kF-1;KK=TF;end;local sL=(0);for oo=kF,TF do sL=sL+0x01;VK[oo]=sF[sL];end;else do KK=kF-0x1;end;end;end;else local RO=(OU[6]);local oO=(VK[RO]);for wK=RO+0x1,OU[0X01]do do oO=oO..VK[wK];end;end;(VK)[OU[0X7]]=oO;end;else do if not(ZU<64)then if ZU<0X000041 then do if VK[OU[0x6]]==VK[OU[0X1]]then OK=OU[0X7];end;end;elseif ZU==0X042 then VK[OU[7]]=w(VK[OU[6]],VK[OU[1]]);else(VK)[OU[7]]={};end;else if ZU<0X3e then if OU[0X001]==0X000EE then OK=OK-1;(Ga)[OK]={[4]=87,[0X6]=(OU[0X006]-9),[0X07]=(OU[0X7]-9)};else repeat local Li,ui=Ba,VK;if not(#Li>0X00)then else local gb=({});for GT,zT in Z,Li do for SG,yG in Z,zT do do if yG[1]==ui and yG[2]>=0X000 then local wT=yG[0x2];if not gb[wT]then(gb)[wT]={ui[wT]};end;yG[1]=gb[wT];do(yG)[0x002]=0x01;end;end;end;end;end;end;until true;do return false,OU[0X7],KK;end;end;else if ZU==63 then(VK)[OU[0x7]]=VK[OU[6]]*VK[OU[0x1]];else VK[OU[0X7]]=i(VK[OU[0X6]],VK[OU[0X001]]);end;end;end;end;end;end;end;end;else if ZU<0X4E then if not(ZU<0X48)then if not(ZU>=75)then do if not(ZU>=0x49)then local Ae=(OU[7]);VK[Ae](B(VK,Ae+0X1,KK));KK=Ae-1;else do if ZU~=0X00004a then KK=OU[7];do VK[KK]=VK[KK]();end;else(VK)[OU[7]]=OU[0X2];end;end;end;end;else do if ZU>=76 then if ZU~=0X4d then local dl=(OU[7]);do VK[dl]=VK[dl](B(VK,dl+1,KK));end;do KK=dl;end;else do if not(not(VK[OU[6]]<=OU[5]))then else do OK=OU[0X007];end;end;end;end;else OK=OU[0X6];end;end;end;else if ZU<0x000045 then if ZU==0x44 then do(VK)[OU[7]]=OU[0x0002];end;else do if OU[1]~=195 then VK[OU[0X7]]=nil;else OK=OK-1;Ga[OK]={[4]=39,[0X6]=(OU[6]-27),[7]=(OU[0X007]-27)};end;end;end;else if not(ZU<0X46)then if ZU~=0X047 then if OU[0X1]~=0X0000AA then repeat local Fp,np=Ba,VK;if#Fp>0 then local TI={};for DD,tD in Z,Fp do for EU,VU in Z,tD do if not(VU[1]==np and VU[0X00002]>=0)then else local sa=VU[2];do if not TI[sa]then TI[sa]={np[sa]};end;end;VU[1]=TI[sa];(VU)[2]=1;end;end;end;end;until true;local H8=OU[0X07];return false,H8,H8+OU[0X6]-0X002;else OK=OK-0X0001;(Ga)[OK]={[0X006]=(OU[0x06]-208),[0X7]=(OU[0X07]-208),[4]=0X43};end;else local LS=Ra[OU[0X6]];(VK)[OU[7]]=LS[0x1][LS[0X2]];end;else(VK)[OU[7]]=jK[OU[0X2]];end;end;end;else if not(ZU>=84)then do if ZU<0x51 then if ZU>=0X4F then if ZU~=0X00050 then do VK[OU[7]]=false;end;else VK[OU[0X007]]=VK[OU[0X6]][VK[OU[0X001]]];end;else(VK)[OU[7]]=rR[OU[0X0006]];end;else if not(ZU<0X52)then if ZU==83 then if OU[0X1]~=71 then if not VK[OU[0X00007]]then OK=OU[0x6];end;else OK=OK-0X00001;(Ga)[OK]={[0x07]=(OU[7]-0x43),[6]=(OU[0x0006]-67),[0X4]=0x57};end;else do(VK)[OU[7]]=Q(VK[OU[6]],VK[OU[1]]);end;end;else local Vq=VK[OU[6]]/VK[OU[0X01]];VK[OU[0X0007]]=Vq-Vq%0X1;end;end;end;else if not(ZU>=87)then if not(ZU<0x00055)then if ZU==0X56 then repeat local Kk,kk=Ba,VK;if#Kk>0X000 then local rk={};do for NG,VG in Z,Kk do for tz,az in Z,VG do if az[1]==kk and az[2]>=0X0 then local Gm=az[0x2];if not rk[Gm]then(rk)[Gm]={kk[Gm]};end;az[1]=rk[Gm];az[0X0002]=0X1;end;end;end;end;end;until true;local E4=(OU[7]);return false,E4,E4;else local pD=(OU[7]);do KK=pD+OU[6]-0X001;end;(VK)[pD]=VK[pD](B(VK,pD+0X01,KK));KK=pD;end;else local Dj=(OU[6]);VK[OU[7]]=VK[Dj]..VK[Dj+0X1];end;else if ZU>=0X58 then do if ZU==89 then VK[OU[0X7]]=VK[OU[0X6]]<=VK[OU[0X1]];else local oa=OU[7];local ia=(z(function(...)s();do for ay,jy,py,Ry,hy,gy,uy,by,sy,Iy in...do s(true,{ay,jy,py,Ry,hy,gy,uy,by,sy,Iy});end;end;end));ia(VK[oa],VK[oa+1],VK[oa+2]);KK=oa;(VK)[oa]=ia;do OK=OU[0x6];end;end;end;else do if OU[0X1]==0X3a then OK=OK-1;Ga[OK]={[0X6]=(OU[0X6]-0x01f),[7]=(OU[0x7]-0X001f),[0x0004]=39};else(VK)[OU[7]]=VK[OU[0X6]];end;end;end;end;end;end;end;else if ZU>=22 then if not(ZU<0X21)then if ZU>=39 then do if not(ZU<0X2A)then do if not(ZU<0X2B)then if ZU==44 then(VK)[OU[0x7]]=not VK[OU[6]];else repeat local DK,TK=Ba,VK;if#DK>0X0 then local C8={};for Fa,la in Z,DK do for x3,X3 in Z,la do do if X3[1]==TK and X3[2]>=0 then local n6=X3[0x002];if not C8[n6]then C8[n6]={TK[n6]};end;do X3[0x1]=C8[n6];end;X3[2]=1;end;end;end;end;end;until true;return true,OU[0X00007],0X00001;end;else(VK)[OU[0X7]]=o(VK[OU[0X6]],VK[OU[1]]);end;end;else if not(ZU<0X28)then if ZU~=0X29 then do(VK)[OU[7]]=VK[OU[0X006]]%VK[OU[0X1]];end;else local mi=OU[7];local Qi,Vi=VK[mi]();if not(Qi)then else for XB=1,OU[1]do VK[mi+XB]=Vi[XB];end;OK=OU[6];end;end;else local I8,z8=fK-Ya,OU[0x00007];do if not(I8<0X0)then else do I8=-0X00001;end;end;end;for lL=z8,z8+I8 do VK[lL]=XK[Ya+(lL-z8)+0X1];end;KK=z8+I8;end;end;end;else if ZU>=36 then if not(ZU>=37)then(VK)[OU[0X7]]=VK[OU[6]]==VK[OU[0x1]];else if ZU==38 then local WL=Ra[OU[6]];do WL[0X1][WL[2]]=VK[OU[7]];end;else local sa=OU[7];KK=sa+OU[6]-0X1;(VK[sa])(B(VK,sa+0x1,KK));KK=sa-1;end;end;else if ZU>=34 then if ZU~=0X23 then VK[OU[0X07]]=VK[OU[0X006]]^VK[OU[1]];else local S9,o9=OU[7],((OU[1]-0X1)*50);local Y9=VK[S9];for HP=1,OU[6]do(Y9)[o9+HP]=VK[S9+HP];end;end;else do if OU[0X001]~=0Xf5 then VK[OU[7]]=#VK[OU[0x6]];else OK=OK-0x1;(Ga)[OK]={[0x06]=(OU[6]-0X7a),[7]=(OU[0X00007]-0x00007a),[0X4]=0X00043};end;end;end;end;end;else do if ZU<27 then if not(ZU<0X18)then if ZU<0x19 then local HE=OU[7];local jE=(z(function(...)(s)();for dn,cn in...do(s)(true,dn,cn);end;end));jE(VK[HE],VK[HE+0X1],VK[HE+2]);KK=HE;(VK)[HE]=jE;OK=OU[0X06];else if ZU==0X00001A then if VK[OU[6]]~=VK[OU[1]]then do OK=OU[0x00007];end;end;else do repeat local h6,z6=Ba,(VK);if#h6>0X0 then local F4=({});for EM,eM in Z,h6 do for wL,CL in Z,eM do if not(CL[0X1]==z6 and CL[0X2]>=0x0000)then else local Ez=(CL[2]);if not(not F4[Ez])then else F4[Ez]={z6[Ez]};end;CL[1]=F4[Ez];do(CL)[0X2]=0X1;end;end;end;end;end;until true;end;do return;end;end;end;else if ZU==0X17 then local HL=OU[0X00007];VK[HL](VK[HL+1]);KK=HL-0X001;else VK[OU[7]]=U(VK[OU[6]]);end;end;else if ZU>=0X001e then do if not(ZU<0X1f)then do if ZU==32 then(VK)[OU[0X7]]=VK[OU[6]]>VK[OU[1]];else local o5=ha[OU[0x6]];local n5=o5[6];local j5=(#n5);local i5=nil;do if not(j5>0)then else i5={};for eK=1,j5 do local qK=n5[eK];do if qK[0X001]==0 then do(i5)[eK-1]={VK,qK[0X0002]};end;else i5[eK-0x01]=Ra[qK[0X0002]];end;end;end;y(Ba,i5);end;end;do(VK)[OU[7]]=pR(jK,o5,i5);end;end;end;else local sW=OU[0X007];do(VK)[sW]=VK[sW](VK[sW+1],VK[sW+0X2]);end;do KK=sW;end;end;end;else do if ZU<0X1c then local qx=(OU[0X7]);local cx,mx=VK[qx],(OU[0X1]-0x00001)*0X32;for Yx=1,KK-qx do(cx)[mx+Yx]=VK[qx+Yx];end;else if ZU==0X00001d then local zo=VK[OU[0X6]];local So=(OU[0X7]);VK[So+0X001]=zo;VK[So]=zo[OU[5]];else do VK[OU[7]]=VK[OU[6]]>=VK[OU[0X1]];end;end;end;end;end;end;end;end;else if not(ZU>=11)then if not(ZU>=5)then if not(ZU<2)then if ZU<3 then do for X_=OU[7],OU[0X6]do VK[X_]=nil;end;end;else do if ZU==4 then local iB=OU[7];local gB=OU[6];KK=iB+gB-1;repeat local jL,LL=Ba,(VK);if not(#jL>0)then else local xG=({});do for qH,yH in Z,jL do do for FH,bH in Z,yH do if not(bH[1]==LL and bH[2]>=0)then else local Ob=(bH[2]);if not(not xG[Ob])then else(xG)[Ob]={LL[Ob]};end;bH[0X001]=xG[Ob];(bH)[0x2]=0X00001;end;end;end;end;end;end;until true;return true,iB,gB;else local S5=(OU[0X7]);(VK)[S5]=VK[S5](VK[S5+1]);do KK=S5;end;end;end;end;else if ZU~=0X01 then repeat local Oi,Pi=Ba,(VK);if#Oi>0X0000 then local E2=({});for c7,k7 in Z,Oi do do for SW,BW in Z,k7 do if BW[1]==Pi and BW[2]>=0 then local JX=(BW[0X2]);do if not(not E2[JX])then else E2[JX]={Pi[JX]};end;end;BW[0X1]=E2[JX];(BW)[2]=1;end;end;end;end;end;until true;return true,OU[0X7],0X000;else if VK[OU[0X6]]==OU[0X5]then OK=OU[7];end;end;end;else if not(ZU>=0X0008)then do if ZU<6 then local Ok=OU[0X07];local mk,Dk=VK[Ok]();if mk then(VK)[Ok+1]=Dk;OK=OU[6];end;else if ZU==0X00007 then do(VK)[OU[7]]=VK[OU[6]]~=OU[5];end;else if VK[OU[6]]<=VK[OU[0X1]]then OK=OU[0x00007];end;end;end;end;else do if not(ZU<0x9)then if ZU~=0xa then VK[OU[7]]=m(VK[OU[6]],VK[OU[0X00001]]);else VK[OU[0x00007]][OU[2]]=VK[OU[1]];end;else VK[OU[7]]=VK[OU[6]]~=VK[OU[1]];end;end;end;end;else if not(ZU>=0X10)then do if not(ZU<13)then do if not(ZU>=14)then VK[OU[0X007]]={B({},0X1,OU[6])};else if ZU==15 then local T_=(OU[0X7]);local D_=(z(function(...)s();for Yp in...do(s)(true,Yp);end;end));(D_)(VK[T_],VK[T_+0X1],VK[T_+2]);KK=T_;VK[T_]=D_;OK=OU[6];else local z_=OU[7];local n_,M_=VK[z_]();if n_ then OK=OU[6];VK[z_+0X003]=M_;end;end;end;end;else do if ZU~=0Xc then(VK)[OU[0x007]]=VK[OU[0x06]]<VK[OU[0X00001]];else VK[OU[0x007]]=VK[OU[0x6]][OU[0X5]];end;end;end;end;else if ZU>=19 then if ZU<0X14 then do KK=OU[0X00007];end;(VK[KK])();KK=KK-1;else if ZU~=21 then(jK)[OU[2]]=VK[OU[0x7]];else local wx=OU[0X007];local rx,zx,Ix=VK[wx]();if rx then(VK)[wx+1]=zx;(VK)[wx+0X002]=Ix;OK=OU[0X0006];end;end;end;else if ZU>=0X11 then if ZU~=0X12 then if not(VK[OU[0X6]]<VK[OU[1]])then else OK=OU[0x07];end;else if VK[OU[0X0007]]then OK=OU[6];end;end;else do VK[OU[0X07]]=true;end;end;end;end;end;end;end;until false;end);if LK then do if UK then if hK~=1 then do return VK[IK](B(VK,IK+0X001,KK));end;else return VK[IK]();end;else if IK then return B(VK,IK,hK);end;end;end;else if J(UK)~="string"then(r)(UK,0);else if W(UK,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(W(UK,"^.-:%d+: "))then(r)(UK,0);else r('\076u\114\097p\104 \083c\114\105p\116\058'..(Xa[OK-0X00001]or'(in\116e\114na\108)')..": "..d(UK),0);end;end;end;end;if h then(h)(La,qa);end;return La;end;do nR=2;end;else function KR()local rb,Wb,ub=0X2,nil,(nil);repeat if rb<=0X0 then ub={nil,{},LR,LR,LR,LR,LR,{},{}};do rb=3;end;else do if rb==0x01 then do Wb={};end;rb=0;else rb=0X1;end;end;end;until rb>=3;(ub)[0X4]=V();rb=0X0000;local Cb,Mb=nil,nil;do repeat if not(rb<=1)then if rb~=2 then(ub)[0X7]=V();rb=0x4;else Cb={};do rb=0X1;end;end;else if rb~=0X0000 then Mb=0x001;do rb=0X003;end;else do(ub)[0X000010]=g();end;rb=0X2;end;end;until rb>=0X4;end;do ub[14]=g();end;local kb,Gb,db=nil,nil,nil;do for qr=0,0X4 do do if not(qr<=1)then if qr<=2 then do db=e()~=0;end;else if qr~=3 then(ub)[1]=V();else for PH=1,kb do local IH=e();local sH=LR;local BH=nil;local SH=(0X1);repeat if not(SH<=0X00002)then do if SH<=0X3 then do if IH==156 then sH=g();elseif IH==178 then sH=C();elseif IH==3 then sH=x()+g();elseif IH==225 then sH=C();elseif IH==114 then sH=C();elseif IH==101 then sH=false;elseif IH==223 then do sH=p(SR(Gb),PR);end;elseif IH==128 then sH=x();elseif IH==0X1 then sH=C();elseif IH~=fR then else sH=VR;end;end;SH=0X0004;else if SH~=0X4 then(Cb)[Mb]=BH;SH=0x00002;else do BH={sH,{}};end;SH=5;end;end;end;else do if SH<=0 then if db then(JR)[dR]=BH;dR=dR+1;end;SH=0X06;else if SH~=1 then Mb=Mb+1;SH=0;else(Wb)[PH-0X1]=Mb;do SH=3;end;end;end;end;end;until SH>0X5;end;end;end;else if qr==0 then kb=g()-0xff97;else Gb=e();end;end;end;end;end;local vb=ub[8];do rb=0x01;end;local pb,Xb=nil,(nil);while rb<=1 do if rb~=0 then pb=g()-HR;do rb=0;end;else Xb={};rb=0X00002;end;end;rb=0X0;local Jb=(nil);do while 0.2915770702608059 do do if rb<=0 then for jL=0X0,pb-0x1 do do vb[jL]=KR();end;end;rb=0X2;else do if rb==0X1 then Jb=g()-0X0Ba3f;break;else(ub)[16]=g();do rb=0X1;end;end;end;end;end;end;end;local gb=(ub[9]);rb=7;local Tb=nil;while rb~=0x008 do do if rb<=3 then do if not(rb<=1)then if rb~=0x02 then for B9=1,Jb do local A9=(ub[9][B9]);for VG,qG in TR(L)do local YG,LG=nil,nil;do for as=0,2 do if not(as<=0X000)then if as~=0X0001 then do if LG==0X0a then local TV,vV,EV=0X0,nil,(nil);while true do do if TV<=0 then vV=Wb[A9[qG]];TV=2;elseif TV~=0X00001 then EV=Cb[vV];do TV=1;end;else if EV then A9[YG]=EV[OR];local EC=EV[2];EC[#EC+OR]={A9,YG};end;break;end;end;end;else if LG~=0x1 then else do(A9)[qG]=B9+A9[qG]+0X1;end;end;end;end;else do LG=A9[YG];end;end;else YG=f[qG];end;end;end;end;end;do rb=0;end;else do(ub)[0X5]=E(Tb,0X00002,0X1)~=0X00000;end;do rb=6;end;end;else if rb==0X00000 then(ub)[11]=e();rb=0x5;else(ub)[0X3]=E(Tb,OR,0X1)~=0;rb=2;end;end;end;else if not(rb<=0X05)then if rb~=6 then for bK=0X1,Jb do(gb)[bK]={[0x00002]=e(),[0x6]=H(),[4]=V(),[3]=e(),[1]=H(),[5]=e(),[0X7]=H()};end;rb=3;else ub[0X0F]=e();do rb=0X00004;end;end;else if rb~=0X4 then Tb=e();do rb=1;end;else ub[6]=Xb;rb=8;end;end;end;end;end;do rb=0X3;end;local nb=(nil);do while"c\107~W\112Q\068"do if rb<=1 then if rb==0x00 then for oV=0X01,nb do local nV,aV,YV,BV=0X3,nil,nil,(nil);while nV<4 do if not(nV<=0X1)then if nV==2 then do YV=g();end;nV=0X0;else aV=g();nV=0X02;end;else if nV~=0X0 then for PB=aV,YV do do(ub[2])[PB]=BV;end;end;nV=4;else BV=g();nV=1;end;end;end;end;rb=0X00002;else return ub;end;else if not(rb<=2)then do if rb~=3 then nb=g();rb=0;else for Db=OR,V()do(Xb)[Db]={e(),V()};end;rb=0X0004;end;end;else do(ub)[14]=g();end;rb=0x001;end;end;end;end;end;do nR=0;end;end;else if nR~=0 then rR[0X4]=JR;nR=0X4;else IR=KR();do nR=0X001;end;end;end;end;end;JR=nil;do return pR(Y,IR,LR)(...);end;end)(nil,_ENV,167,0x4,0X000A,0X3,0X0009,table.insert,string,0X8,true,0x100,14,coroutine.wrap,0Xb,32,bit,0X1f,pcall,7,0xf,string.byte,tostring,0,2,type,error,30612,ipairs,setmetatable,tonumber,coroutine.yield,select,158,'\098\110\111\116',0X001,next,table.unpack,string.match,getfenv,'\098and',...);
